name: build docker images

on:
  push:
    branches:
      - main
    paths:
      - Golang/**

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: get latest sha of 8 digits.
        run: |
          echo "GITHUB_SHA_SHORT=$(git rev-parse HEAD | cut -c 33-40)" >> $GITHUB_ENV
          
      - name: Build
        run: |
          cd Golang
          for file in *; do
          $file
          if [ "$file" = 1.15-alpine ];
          then
            echo alpine
            cd 1.15-alpine
            docker build -t ghcr.io/royalrajesh/test-5/golang:1.15-alpine${{ env.GITHUB_SHA_SHORT }} .
            cd ..
          elif [ "$file" = 1.15-alpine-fuzz ];
          then
            echo alpine-fuzz
            cd 1.15-alpine-fuzz
            docker build -t ghcr.io/royalrajesh/test-5/golang:1.15-alpine-fuzz${{ env.GITHUB_SHA_SHORT }} .
            cd ..
          elif [ "$file" = 1.17-alpine ];
          then
            echo alpine
            cd 1.17-alpine
            docker build -t ghcr.io/royalrajesh/test-5/golang-1.17alpine${{ env.GITHUB_SHA_SHORT }} .
            docker tag ghcr.io/royalrajesh/test-5/golang-1.17alpine${{ env.GITHUB_SHA_SHORT }} ghcr.io/royalrajesh/test-5/golang-1.17alpine:1.17alpinelatest
            cd ..
          elif [ "$file" = 1.17-alpine-fuzz ];
          then
            echo alpine-fuzz
            cd 1.17-alpine-fuzz
            docker build -t ghcr.io/royalrajesh/dockerfiles3/golang-1.17alpinefuzz${{ env.GITHUB_SHA_SHORT }} .
            docker tag ghcr.io/royalrajesh/test-5/golang-1.17alpinefuzz${{ env.GITHUB_SHA_SHORT }} ghcr.io/royalrajesh/test-5/golang-1.17alpinefuzz:1.17alpinefuzzlatest
            cd ..
          fi
          done
      # Runs a single command using the runners shell
      - name: Log into container registry
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Login to GitHub Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: royalrajesh
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to Github Container Registry
        run: |
          docker image push --all-tags ghcr.io/royalrajesh/test-5/golang
